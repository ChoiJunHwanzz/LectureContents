public class BitOrTest {
    public static void main(String[] args) {
        int num1 = 10, num2 = 5;

        // | 이 비트연산자 OR
        // 관계 연산자에서는 || 형태로 존재하였음
        // 10 ===> 1010
        //  5 ===> 0101 OR
        // -----------------
        // 15 ===> 1111
        System.out.printf("%d OR %d = %d\n", num1, num2, num1 | num2);

        num2 = 136;

        //  10 ===> 00001010
        // 136 ===> 10001000 OR
        // ---------------------
        // 138 ===> 10001010
        System.out.printf("%d OR %d = %d\n", num1, num2, num1 | num2);

        // OR 연산은 합집합 개념, AND 연산은 교집합 개념
    }
}

// AND연산자 에서 다룬 개념과 다를게 없다
// OR에서는 2^n 자리가 같던 다르던 이진수 1이 있는 부분에 1을 서로 합친다고 보면 된다
// 그렇다고 숫자가 더해지는 건 아니고 같은 2^n 자리에 두 숫자가 1이면 그냥 1로 표기한다
// 0과 1이라면 1   /  0과 0이라면 0 덧셈 개념과는 좀 다르니 분명히 짚고가자
