public class ChallengeQ {
    public static void main(String[] args) {

        // 5월12일 어제차 진도 복습하며 생긴 궁금한점.


/* A:
 전체 데이터가 1000개 있다고 가정합니다.
 케이스 A에 해당하는 데이터는 150개 있습니다.
 케이스 B에 해당하는 데이터는 600개 있습니다.
 우리가 찾아야 하는 것은 케이스 A와 케이스 B를 동시에 만족해야함
 아무것도 아닌 케이스는 250개
 이런 상황에서 가장 효율적인 코드를 작성한다면 어떻게 작성해야할까요 ?

 if (case A && case B): 1번
 1000번 검사중 case A를 만족하는 것은 150개가 나옴
 그러므로 뒤의 case B에 대한 검사를 150번 추가로 함

 if (case B && case A): 2번
 1000번 검사중 case B를 만족하는 것은 600개가 나옴
 그러므로 뒤의 case A에 대한 검사 또한 600번 해야함

 */
        //위와 같은 질문에서 1000번에 검사중 case A를 만족하는 것은 150개가 나오게 된다면
        //그 다음 case B에 만족하는 검사는 나머지 데이터 전체를 검사하는것이 아닌가? 그럼 나머지 검사 양은 850개일텐데..
        //이부분이 이해가 잘 안간다.


 //관계연산자 문제 (챌린지)
/*
1000개의 데이터가 있다.
여기서 C에 해당하는 데이터는 30개 있다.
F에 해당하는 데이터는 500개 있다.
B에 해당하는 데이터는 240개 있다.
A에 해당하는 데이터는 700개 있다.
D에 해당하는 데이터는 350개 있다.
C 혹은 F 둘 중 하나의 케이스를 판정하고자 한다.
어떻게 하면 가장 효율적으로 이 케이스들을 찾아낼 수 있을까 고민해보자!
 */

        int c = 30, f = 500, b = 240, a = 700, d = 350;

        if ((c == 1000) || (f == 1000)){

            System.out.println("가장 효율적인 케이스");

        }else if ((f == 1000) || (c == 1000)){
            System.out.println("비효율적인 케이스");
        } else{
            System.out.println("그외 나머지 케이스");
        }

    }
}
