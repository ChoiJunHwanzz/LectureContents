class BitTest {
    public static void main(String[] args) {
//
//        //==============================================
//        // & 이 비트연산자 AND 관게 연산자에서는 &&형태
//        // & 이 비트연산자 AND
//        // 관계 연산자에서는 && 형태로 존재하였음
//        //    10 ===> 1010
//        //     8 ===> 1000 AND
//        // 계산-----------------
//        //     8 ===> 1000
//        // 다음과 같이  AND 연산자는 같은 1이 존재하지 않는 다면 출력되지 않는다.
//        // int num1 = 10, num2 = 8;
//        int num1 = 10, num2 = 8;
//
//        System.out.printf("%d AND %d = %d\n", num1, num2, num1 & num2);
//        //위의 수식과 같이 결과는 같은 8이 출력된다.
//
//        //==============================================
//        // |이 비트연산자 OR
//        // 관계 연산자에서는 || 형태로 존재하였음
//        // 10 ===> 1010
//        //  5 ===> 0101 OR
//        // -----------------
//        // 15 ===> 1111
//        // 다음과 같이  OR 연산자는 한쪽비트에 1만 있으면 그대로 출력된다.
//        System.out.printf("%d OR %d = %d\n", num1, num2, num1 | num2);
//        //위의 수식과 같이 결과는 같은 10이 출력된다.
//
//        num2 = 136;
//
//        //  10 ===> 00001010
//        // 136 ===> 10001000 OR
//        // ---------------------
//        // 138 ===> 10001010
//        System.out.printf("%d OR %d = %d\n", num1, num2, num1 | num2);


        //==============================================
        // OR 연산은 합집합 개념, AND 연산은 교집합 개념


        //==============================================
        int num1 = 2, num2 = 5, num3 = 10;

        //예제 1
        System.out.printf("%d << %d = %d\n", num1, num3, num1 << num3);
        //예제 2
        System.out.printf("%d << %d = %d\n", num2, num3, num2 << num3);
        //예제 3
        System.out.printf("%d << %d = %d\n", num3, num3, num3 << num3);

        // 왼쪽 쉬프트의 경우 단순히 2^n을 곱하면 되지만
        // 오른쪽 쉬프트의 경우 단순히 2^n을 나누면 안된다.
        // 5 / 2^2 = 1.25
        // 결론: 오른쪽 쉬프트는 2^n으로 나누되 소수점을 버려야 한다.
        System.out.printf("%d >> %d = %f\n", num2, num1, (float)(num2 >> num1));

        // 이유:
        // 0101 ----> 5
        // 0001 ----> 1

        // 종합적 결론:
        // 쉬프트 연산은 2^n을 곱하거나 나눈다.
        // 안타깝게도 쉬프트 연산은 정수형끼리밖에 안된다.
        // 최근에 나온 휴대폰 전용 ARM 프로세서에서는 소수점에 대한 쉬프트 연산을 지원하기도 한다.
    }
}
